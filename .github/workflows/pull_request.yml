name: Pull request

on: [pull_request, workflow_dispatch]

jobs:
  setup:
    uses: msamsel/vue-start-app/.github/workflows/setup.yml@master
  
  changes:
    name: Changes
    runs-on: ubuntu-latest
    outputs:
      linter: ${{ steps.filter.outputs.linter }}
      test: ${{ steps.filter.outputs.test }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            linter:
              - 'src/**'
            test:
              - '!(tests/**)'

  test:
    needs: [setup, changes]
    if: ${{ needs.changes.outputs.test == 'true' }}
    uses: msamsel/vue-start-app/.github/workflows/test.yml@master

  linter:
    needs: [setup, changes]
    if: ${{ needs.changes.outputs.linter == 'true' }}
    uses: msamsel/vue-start-app/.github/workflows/lint.yml@master

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/*
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build
        run: yarn build
      
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/dist
          key: dist-${{ runner.os }}-${{ github.sha }}

  deploy:
    name: Deploy
    concurrency: ci-${{ github.ref }}

    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/dist
          key: dist-${{ runner.os }}-${{ github.sha }}

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: Sanitize branch name
        id: sanitized-name
        uses: yeouchien/sanitize-branch-name-action@v1
        with:
          branch-name: ${{ steps.branch-name.outputs.current_branch }}
      
      - name: echo
        run: echo "${{ steps.sanitized-name.outputs.sanitized-branch-name }}"
        
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: master
          folder: ./dist
          target-folder: ${{ steps.sanitized-name.outputs.sanitized-branch-name }}
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          repository-name: msamsel/vue-test

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          body: |
            Helpful links for: ${{ github.sha }}
            - Build: (https://docplanner-phone-eu-test.s3.eu-north-1.amazonaws.com/build/${{ steps.sanitized-name.outputs.sanitized-branch-name }}/index.html)
            - Storybook: (https://docplanner-phone-eu-test.s3.eu-north-1.amazonaws.com/build/${{ steps.sanitized-name.outputs.sanitized-branch-name }})/storybook/index.html)
